package view;

import dao.AlunoDAO;
import dao.EnderecoDAO;
import dto.EnderecoDTO;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Aluno;
import model.Endereco;
import service.EnderecoService;


public class ViewCadastroAluno extends javax.swing.JFrame {
    
    private JTable jTableAlunos;
    private DefaultTableModel tableModel;
    private AlunoDAO alunoDao;
    private EnderecoDAO enderecoDao;
    private ArrayList<Aluno> listaAlunos;
    private boolean alunoSelecionado;
    /**
     * Creates new form ViewCadastroAluno
     */
    public ViewCadastroAluno() {
        initComponents();
        
        alunoDao = new AlunoDAO();
        enderecoDao = new EnderecoDAO();
        atualizaGrid();
        
    }
    
    public void atualizaGrid(){
        try{
            
            //Retornando dados da tabela
            String sql = "SELECT * FROM public.\"Aluno\" Order by \"RA_ALUNO\";";
            listaAlunos = new ArrayList<>();
            listaAlunos = alunoDao.retornarLista(sql);
            
            //Limpar a tabela
            tbAlunos.removeAll();
            
            //Criar as colunas
            DefaultTableModel tableModel = 
                    new DefaultTableModel(new Object[][]{},
                    new String[]{"RA", "Nome", "Dt. Nascimento"}){
                
                //Adicionado para não deixar alterar as células da tabela        
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; 
                }
            };
            
            //setar as colunas na tabela
            tbAlunos.setModel(tableModel);
            
            //Adicionar os dados na tabela
            DefaultTableModel dm = (DefaultTableModel) tbAlunos.getModel();
            for (Aluno aluno : listaAlunos) {
                
                dm.addRow(new Object[]{aluno.getRaAluno(), 
                    aluno.getNomeAluno(), aluno.getDtNascAluno()});
                
            }
            
            //selecionar um aluno na tabela
            tbAlunos.getSelectionModel()
                    .addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    //Testar se selecionou algum aluno na grid
                    int linhaSelecionada = tbAlunos.getSelectedRow();
                    if(linhaSelecionada != -1){
                        mostrarDadosAluno(listaAlunos.get(linhaSelecionada));
                    }
                }
            });

        }catch(Exception ex){
            
        }
    }
    
    private void mostrarDadosAluno(Aluno aluno){
        
        tfRA.setText(String.valueOf(aluno.getRaAluno()));
        tfNome.setText(aluno.getNomeAluno());
        tfDtNasc.setText(aluno.getDtNascAluno());
        
        if (aluno.getEndereco() != null) {
            tfCep.setText(aluno.getEndereco().getCep());
            tfLogradouro.setText(aluno.getEndereco().getLogradouro());
            tfNumEnd.setText(aluno.getEndereco().getNumero());
            tfBairro.setText(aluno.getEndereco().getBairro());
            tfCidade.setText(aluno.getEndereco().getCidade());
            tfUF.setText(aluno.getEndereco().getUf());
        } else {
            
            tfCep.setText("");
            tfLogradouro.setText("");
            tfNumEnd.setText("");
            tfBairro.setText("");
            tfCidade.setText("");
            tfUF.setText("");
        }
        
        btSalvar.setEnabled(false);
        alunoSelecionado = true;
        tfRA.setEditable(false);
        
        
        
    }
    
    private void limparCampos(){
        tfRA.setText("");
        tfNome.setText("");
        tfDtNasc.setText("");
        tfCep.setText("");
        tfLogradouro.setText("");
        tfNumEnd.setText("");
        tfBairro.setText("");
        tfCidade.setText("");
        tfUF.setText("");
        btSalvar.setEnabled(true);
        tfRA.setEditable(true);
        alunoSelecionado = false;
        tbAlunos.clearSelection();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfRA = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfDtNasc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfCep = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfLogradouro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfNumEnd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfBairro = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfCidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfUF = new javax.swing.JTextField();
        btRemover = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAlunos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CADASTRO DE ALUNOS");
        jLabel1.setToolTipText("");

        jLabel2.setText("R.A.");

        jLabel3.setText("Nome");

        jLabel4.setText("Data Nascimento");

        jLabel5.setText("CEP");

        tfCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCepActionPerformed(evt);
            }
        });
        tfCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCepKeyPressed(evt);
            }
        });

        jLabel6.setText("Logradouro");

        jLabel7.setText("Nº");

        jLabel8.setText("Bairro");

        jLabel9.setText("Cidade");

        jLabel10.setText("UF");

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfUF, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfCep, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(tfRA)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(tfDtNasc)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7)
                                            .addComponent(tfNumEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(226, 226, 226)
                                .addComponent(jLabel9)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNumEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRemover)
                    .addComponent(btAtualizar)
                    .addComponent(btSalvar)
                    .addComponent(btPesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbAlunos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCepActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        String nome = JOptionPane.showInputDialog(this,
            "Informe o nome do aluno para pesquisar:",
            "Pesquisar Aluno",
            JOptionPane.QUESTION_MESSAGE);

    // Retorna se o usuário cancelar a caixa de diálogo
    if (nome == null) {
        return;
    }

    // Se o campo de pesquisa estiver vazio, recarrega todos os alunos
    if (nome.trim().isEmpty()) {
        atualizaGrid();
        limparCampos();
        return;
    }

    try {
        // Chama o novo método do DAO para buscar por nome
        ArrayList<Aluno> alunosEncontrados = alunoDao.findByNome(nome.trim());

        // Informa ao usuário se nenhum aluno for encontrado
        if (alunosEncontrados.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Nenhum aluno encontrado com o nome informado.",
                    "Não Encontrado",
                    JOptionPane.INFORMATION_MESSAGE);
        }

        // Atualiza a lista de alunos da classe com os resultados da pesquisa
        this.listaAlunos = alunosEncontrados;

        // Limpa a tabela antes de popular com os novos dados
        DefaultTableModel tableModel = (DefaultTableModel) tbAlunos.getModel();
        tableModel.setRowCount(0);

        // Popula a tabela com os alunos encontrados na pesquisa
        for (Aluno aluno : this.listaAlunos) {
            tableModel.addRow(new Object[]{
                aluno.getRaAluno(),
                aluno.getNomeAluno(),
                aluno.getDtNascAluno()
            });
        }

        // Limpa os campos do formulário após a pesquisa
        limparCampos();

    } catch (Exception ex) {
        Logger.getLogger(ViewCadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this,
                "Ocorreu um erro ao realizar a pesquisa. Consulte o log para mais detalhes.",
                "Erro de Pesquisa",
                JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        
        Aluno novoAluno = new Aluno();
        novoAluno.setRaAluno(Integer.parseInt(tfRA.getText()));
        novoAluno.setNomeAluno(tfNome.getText());
        novoAluno.setDtNascAluno(tfDtNasc.getText());
        
        Endereco endereco = new Endereco();
        endereco.setCep(tfCep.getText());
        endereco.setLogradouro(tfLogradouro.getText());
        endereco.setNumero(tfNumEnd.getText());
        endereco.setBairro(tfBairro.getText());
        endereco.setCidade(tfCidade.getText());
        endereco.setUf(tfUF.getText());
        
        novoAluno.setEndereco(endereco);
        
        //Salvando aluno no banco
        if(alunoDao.salvar(novoAluno)){
            JOptionPane.showMessageDialog(this, 
                    "Aluno salvo com sucesso!",
                    "Sucesso",
                    JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, 
                    "Erro ao salvar Aluno, solicite suporte técnico.",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
         
        atualizaGrid();
        
    }//GEN-LAST:event_btSalvarActionPerformed

    private void tfCepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCepKeyPressed
        
        //determina qual tecla clicar para executar o método
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(!tfCep.getText().equals("")){
                try {
                    EnderecoDTO endereco =
                            EnderecoService.buscaEndereco(tfCep.getText());
                    
                    tfLogradouro.setText(endereco.getLogradouro());
                    tfBairro.setText(endereco.getBairro());
                    tfCidade.setText(endereco.getLocalidade());
                    tfUF.setText(endereco.getUf());
                    
                } catch (Exception ex) {
                    Logger.getLogger(ViewCadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tfCepKeyPressed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        
        if(alunoSelecionado){
            Aluno aluno = new Aluno();
            aluno.setRaAluno(Integer.parseInt(tfRA.getText()));
            aluno.setNomeAluno(tfNome.getText());
            aluno.setDtNascAluno(tfDtNasc.getText());
            
            Endereco endereco = new Endereco();
            endereco.setRaAlunoFk(aluno.getRaAluno());
            endereco.setCep(tfCep.getText());
            endereco.setLogradouro(tfLogradouro.getText());
            endereco.setNumero(tfNumEnd.getText());
            endereco.setBairro(tfBairro.getText());
            endereco.setCidade(tfCidade.getText());
            endereco.setUf(tfUF.getText());
            
            aluno.setEndereco(endereco);
            
            if(alunoDao.atualizar(aluno)){
                JOptionPane.showMessageDialog(this, "Aluno atualizado com sucesso!!");
                
                limparCampos();
                atualizaGrid();
                
            }else{
                JOptionPane.showMessageDialog(this, 
                        "Erro ao atualizar o aluno, Solicite suporte técnico.", 
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, 
                        "Selecione um aluno para atualizar.", 
                        "Atenção",
                        JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        
        if (alunoSelecionado) {
    int confirm = JOptionPane.showConfirmDialog(this,
            "Tem certeza que deseja remover o aluno selecionado?",
            "Confirmação",
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String raTexto = tfRA.getText().trim();

            if (raTexto.isEmpty()) {
                JOptionPane.showMessageDialog(this, "O campo RA está vazio. Informe um RA válido.", "Atenção", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int ra = Integer.parseInt(raTexto);

            boolean removido = alunoDao.remover(ra);

            if (removido) {
                JOptionPane.showMessageDialog(this, "Aluno removido com sucesso!");
                limparCampos();
                atualizaGrid();
            } else {
                JOptionPane.showMessageDialog(this, "Aluno não encontrado ou erro ao remover.", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "RA inválido! Digite apenas números inteiros.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
            }
        } else {
             JOptionPane.showMessageDialog(this, "Selecione um aluno na lista para remover.", "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        
        
    }//GEN-LAST:event_btRemoverActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAlunos;
    private javax.swing.JTextField tfBairro;
    private javax.swing.JTextField tfCep;
    private javax.swing.JTextField tfCidade;
    private javax.swing.JTextField tfDtNasc;
    private javax.swing.JTextField tfLogradouro;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfNumEnd;
    private javax.swing.JTextField tfRA;
    private javax.swing.JTextField tfUF;
    // End of variables declaration//GEN-END:variables
}
